#pragma once

#include "IExtractor.h"
#include "PEFiles/PEFile.h"
#include "PEFiles/PEFileExtractor.h"

namespace Extractor
{
    class ExtractorFactory
    {
        public:
            ExtractorFactory(std::string path, FeatureMask mask)
            {
                filetype fileType = checkFiletype(path);
                if(fileType == PE_32_BIT)
                    extractor = new PE::PE32FileFeatureExtractor(path, mask);
                else if(fileType == PE_64_BIT)
                    extractor = new PE::PE64FileFeatureExtractor(path, mask);
            }

            //This NULLS the object so that this factory can be reused 
            inline IExtractor* getExtractor()
            {
                IExtractor* tempEx = extractor;
                extractor = new PE::PE32FileFeatureExtractor();
                return tempEx;
            }
        private:
            filetype checkFiletype(std::string path);

            IExtractor* extractor;
    };
}