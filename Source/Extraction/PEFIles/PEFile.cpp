#include "PEFile.h"

namespace Extractor
{
    namespace PE
    {
        std::shared_ptr<FeatureSet> PEFile32::extractFeatures()
        {
            //TEMP FOR INITIAL TESTING
            FeatureSet set;
            return std::make_unique<FeatureSet>(set);

            // if (!m_fileHandle->is_open())
            // {
            //     throw std::runtime_error("PEFile.cpp: extracor::PE::PEFile32::extractFeatures(): Failed to open file " + m_desc.fileName);
            // }
                    
            // DWORD filesize = fs::file_size(fs::path(m_desc.fileName));
            // char* fileData = new char(filesize); 

            // m_fileHandle->read(fileData, filesize);

            // dosHeader = (PIMAGE_DOS_HEADER)fileData;
            // imageNTHeaders = (PIMAGE_NT_HEADERS)((DWORD)fileData + dosHeader->e_lfanew);
            // DWORD sectionLocation = (DWORD)imageNTHeaders + sizeof(DWORD) + (DWORD)(sizeof(IMAGE_FILE_HEADER)) + (DWORD)imageNTHeaders->FileHeader.SizeOfOptionalHeader;
	        // DWORD sectionSize = (DWORD)sizeof(IMAGE_SECTION_HEADER);
                    
            // DWORD importDirectoryRVA = imageNTHeaders->OptionalHeader.DataDirectory[1].VirtualAddress;
        }

        std::shared_ptr<FeatureSet> PEFile64::extractFeatures()
        {
            FeatureSet set;
            return std::make_unique<FeatureSet>(set);
        }
    }
}