#pragma once
#include "../Extraction/ExtractorTypes.h"
#include "../Extraction/IFile.h"
#include "../Global/Macros.h"
#include <sqlite3.h>
#include <string>
#include <memory>
#include <mutex>

namespace DB
{
    class DBManager
    {
        public:
            DBManager();
            ~DBManager();

            bool insertNGram(Extractor::nGram ngram);
            bool insertNGrams(std::vector<Extractor::nGram> ngrams);
            bool deleteNGram(Extractor::nGram ngram);
            std::unique_ptr<Extractor::nGram> queryNGram(std::string& nGramString);

            bool insertFile(Extractor::FeatureSet& features);
            std::unique_ptr<Extractor::IFile> queryFile(std::string name);
            bool deleteFile(Extractor::FeatureSet& features);
        private:
            std::mutex dbLock;
            bool checkReturnCode(int returnCode, char* error);
            sqlite3* connection;


            NULL_COPY_AND_ASSIGN(DBManager);
    };

}