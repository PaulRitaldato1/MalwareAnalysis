#pragma once

#include <string>
#include <unordered_map>

class Trie
{

    public:

        Trie()
        {
            root = new Node();
        }

        void insert(std::string& word);
        void insert(std::string&& inWord);

        void remove(std::string& word);
       
        bool search(std::string& word);
        bool search(std::string&& inWord);
   
    private:

        struct Node
        {
            std::unordered_map<char, Node*> charMap;
            Node* parent;
            bool isWord = false;
        };

        Node* root;

        inline std::string toLower(std::string& word)
        {
            std::string retString;
            for(char& c : word)
                retString += std::tolower(c);
            return retString;
        }

        inline bool hasChildren(Node* node)
        {
            return node->charMap.empty();
        }

        void internalRemove(Node* node, std::string word);

};